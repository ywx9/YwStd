/// \file ctime
/// \copyright (c) 2022 ywx9.com

// clang-format off
#pragma once

#include "abc.hpp"

// clang-format off
#ifndef ywstd_import
ywstd_export namespace std {

inline clock_t __cdecl clock() {
  return ::clock();
}

inline char* __cdecl asctime(const tm* t) {
  return ::asctime(t);
}

inline size_t __cdecl strftime(char* s, size_t n, const char* f, const tm* t) {
  return ::strftime(s, n, f, t);
}

inline char* __cdecl ctime(const time_t* t) {
  return ::_ctime64(reinterpret_cast<const long long*>(t));
}
inline double __cdecl difftime(time_t t1, time_t t2) {
  return ::_difftime64(static_cast<long long>(t1), static_cast<long long>(t2));
}
inline tm* __cdecl gmtime(const time_t* t) {
  return ::_gmtime64(reinterpret_cast<const long long*>(t));
}
inline tm* __cdecl localtime(const time_t* t) {
  return ::_localtime64(reinterpret_cast<const long long*>(t));
}
inline time_t __cdecl mktime(tm* t) {
  return ::_mktime64(t);
}
inline time_t __cdecl time(time_t* t) {
  return ::_time64(reinterpret_cast<long long*>(t));
}
inline int __cdecl timespec_get(timespec* ts, int base) {
  return ::_timespec64_get(reinterpret_cast<::_timespec64*>(ts), base);
}
}
#endif
