/// \file cctype
/// \copyright (c) 2022 ywx9.com

// clang-format off
#pragma once

#include "abc.hpp"

ywstd_export namespace std {

/// checks if a character is alphanumeric
inline int __cdecl isalnum(int c) { return ::isalnum(c); }

/// checks if a character is alphabetic
inline int __cdecl isalpha(int c) { return ::isalpha(c); }

/// checks if a character is lowercase
inline int __cdecl islower(int c) { return ::islower(c); }

/// checks if a character is an uppercase character
inline int __cdecl isupper(int c) { return ::isupper(c); }

/// checks if a character is a digit
inline int __cdecl isdigit(int c) { return ::isdigit(c); }

/// checks if a character is a hexadecimal character
inline int __cdecl isxdigit(int c) { return ::isxdigit(c); }

/// checks if a character is a control character
inline int __cdecl iscntrl(int c) { return ::iscntrl(c); }

/// checks if a character is a graphical character
inline int __cdecl isgraph(int c) { return ::isgraph(c); }

/// checks if a character is a space character
inline int __cdecl isspace(int c) { return ::isspace(c); }

/// checks if a character is a blank character
inline int __cdecl isblank(int c) { return ::isblank(c); }

/// checks if a character is a printing character
inline int __cdecl isprint(int c) { return ::isprint(c); }

/// checks if a character is a punctuation character
inline int __cdecl ispunct(int c) { return ::ispunct(c); }

/// converts a character to lowercase
inline int __cdecl tolower(int c) { return ::tolower(c); }

/// converts a character to uppercase
inline int __cdecl toupper(int c) { return ::toupper(c); }
}
