/// \file cuchar
/// \copyright (c) 2022 ywx9.com

#pragma once

#include "corecrt.h"

#if ywstd_is_exported
extern "C" {

size_t __cdecl mbrtoc8(char8_t*, const char*, size_t, mbstate_t*);
size_t __cdecl c8rtomb(char*, char8_t, mbstate_t*);
size_t __cdecl mbrtoc16(char16_t*, const char*, size_t, mbstate_t*);
size_t __cdecl c16rtomb(char*, char16_t, mbstate_t*);
size_t __cdecl mbrtoc32(char32_t*, const char*, size_t, mbstate_t*);
size_t __cdecl c32rtomb(char*, char32_t, mbstate_t*);
}
#endif

export namespace std {

using ::mbstate_t;
using size_t = decltype(sizeof(0));

inline size_t mbrtoc8(char8_t* pc8, const char* s, size_t n, mbstate_t* ps) { return ::mbrtoc8(pc8, s, n, ps); }
inline size_t c8rtomb(char* s, char8_t c8, mbstate_t* ps) { return ::c8rtomb(s, c8, ps); }
inline size_t mbrtoc16(char16_t* pc16, const char* s, size_t n, mbstate_t* ps) { return ::mbrtoc16(pc16, s, n, ps); }
inline size_t c16rtomb(char* s, char16_t c16, mbstate_t* ps) { return ::c16rtomb(s, c16, ps); }
inline size_t mbrtoc32(char32_t* pc32, const char* s, size_t n, mbstate_t* ps) { return ::mbrtoc32(pc32, s, n, ps); }
inline size_t c32rtomb(char* s, char32_t c32, mbstate_t* ps) { return ::c32rtomb(s, c32, ps); }
}
