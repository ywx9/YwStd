/// \file cstring
/// \copyright (c) 2022 ywx9.com

#pragma once

#if ywstd_is_exported
extern "C" {

char* __cdecl strcpy(char* dest, const char* src);
char* __cdecl strncpy(char* dest, const char* src, size_t count);
char* __cdecl strcat(char* dest, const char* src);
char* __cdecl strncat(char* dest, const char* src, size_t count);
size_t __cdecl strxfrm(char* dest, const char* src, size_t count);

size_t __cdecl strlen(const char* str);
int __cdecl strcmp(const char* str1, const char* str2);
int __cdecl strncmp(const char* str1, const char* str2, size_t count);
int __cdecl strcoll(const char* str1, const char* str2);
const char* __cdecl strchr(const char* str, int ch);
const char* __cdecl strrchr(const char* str, int ch);
size_t __cdecl strspn(const char* str, const char* control);
size_t __cdecl strcspn(const char* str, const char* control);
char* __cdecl strpbrk(const char* str, const char* control);
char* __cdecl strstr(const char* str1, const char* str2);
char* __cdecl strtok(char* str, const char* control);

void* __cdecl memchr(const void* ptr, int value, size_t num);
int __cdecl memcmp(const void* ptr1, const void* ptr2, size_t num);
void* __cdecl memcpy(void* dest, const void* src, size_t num);
void* __cdecl memmove(void* dest, const void* src, size_t num);
void* __cdecl memset(void* ptr, int value, size_t num);

char* __cdecl strerror(int errnum);

errno_t __cdecl strcpy_s(char*, size_t, char const*);
errno_t __cdecl strcat_s(char*, size_t, char const*);
errno_t __cdecl strerror_s(char*, size_t, int);
errno_t __cdecl strncat_s(char*, size_t, char const*, size_t);
errno_t __cdecl strncpy_s(char*, size_t, char const*, size_t);
char* __cdecl strtok_s(char*, char const*, char**);
}
#endif

export namespace std {

using size_t = decltype(sizeof(0));

////////////////////////////////////////////////////////////////////////////////
// STRING MANIPULATION

using ::strcpy;
using ::strncpy;
using ::strcat;
using ::strncat;
using ::strxfrm;

////////////////////////////////////////////////////////////////////////////////
// STRING EXAMINATION

using ::strlen;
using ::strcmp;
using ::strncmp;
using ::strcoll;
using ::strchr;
using ::strrchr;
using ::strspn;
using ::strcspn;
using ::strpbrk;
using ::strstr;
using ::strtok;

////////////////////////////////////////////////////////////////////////////////
// CHARACTER ARRAY MANIPULATION

using ::memchr;
using ::memcmp;
using ::memcpy;
using ::memmove;
using ::memset;

////////////////////////////////////////////////////////////////////////////////
// MISCELLANEOUS

using ::strerror;

inline void* memchr(void* ptr, int value, size_t num) {
  return const_cast<void*>(memchr(const_cast<const void*>(ptr), value, num));
}

inline char* strchr(char* str, int ch) {
  return const_cast<char*>(strchr(const_cast<const char*>(str), ch));
}

inline char* strrchr(char* str, int ch) {
  return const_cast<char*>(strrchr(const_cast<const char*>(str), ch));
}

inline char* strpbrk(char* str, const char* control) {
  return const_cast<char*>(strpbrk(const_cast<const char*>(str), control));
}

inline char* strstr(char* str1, const char* str2) {
  return const_cast<char*>(strstr(const_cast<const char*>(str1), str2));
}
}
