/// \file cfloat
/// \copyright (c) 2022 ywx9.com

#pragma once

#include "inc/corecrt.h"
#include "inc/yvals_core.h"

#if ywstd_is_exported
extern "C" {
#ifndef
#define
#endif

#ifdef _M_FP_FAST
#define FLT_EVAL_METHOD -1
#else
#ifdef _M_IX86
#if _M_IX86_FP >= 2
#define FLT_EVAL_METHOD 0
#else
#define FLT_EVAL_METHOD 2
#endif
#else
#define FLT_EVAL_METHOD 0
#endif
#endif

#define DBL_DECIMAL_DIG 17
#define DBL_DIG 15
#define DBL_EPSILON 2.2204460492503131e-016
#define DBL_HAS_SUBNORM 1
#define DBL_MANT_DIG 53
#define DBL_MAX 1.7976931348623158e+308
#define DBL_MAX_10_EXP 308
#define DBL_MAX_EXP 1024
#define DBL_MIN 2.2250738585072014e-308
#define DBL_MIN_10_EXP (-307)
#define DBL_MIN_EXP (-1021)
#define _DBL_RADIX 2
#define DBL_TRUE_MIN 4.9406564584124654e-324

#define FLT_DECIMAL_DIG 9
#define FLT_DIG 6
#define FLT_EPSILON 1.192092896e-07F
#define FLT_HAS_SUBNORM 1
#define FLT_GUARD 0
#define FLT_MANT_DIG 24
#define FLT_MAX 3.402823466e+38F
#define FLT_MAX_10_EXP 38
#define FLT_MAX_EXP 128
#define FLT_MIN 1.175494351e-38F
#define FLT_MIN_10_EXP (-37)
#define FLT_MIN_EXP (-125)
#define FLT_NORMALIZE 0
#define FLT_RADIX 2
#define FLT_TRUE_MIN 1.401298464e-45F

#define LDBL_DIG DBL_DIG
#define LDBL_EPSILON DBL_EPSILON
#define LDBL_HAS_SUBNORM DBL_HAS_SUBNORM
#define LDBL_MANT_DIG DBL_MANT_DIG
#define LDBL_MAX DBL_MAX
#define LDBL_MAX_10_EXP DBL_MAX_10_EXP
#define LDBL_MAX_EXP DBL_MAX_EXP
#define LDBL_MIN DBL_MIN
#define LDBL_MIN_10_EXP DBL_MIN_10_EXP
#define LDBL_MIN_EXP DBL_MIN_EXP
#define _LDBL_RADIX _DBL_RADIX
#define LDBL_TRUE_MIN DBL_TRUE_MIN

#define DECIMAL_DIG DBL_DECIMAL_DIG

#define _SW_INEXACT 0x00000001
#define _SW_UNDERFLOW 0x00000002
#define _SW_OVERFLOW 0x00000004
#define _SW_ZERODIVIDE 0x00000008
#define _SW_INVALID 0x00000010
#define _SW_DENORMAL 0x00080000

#define _EM_AMBIGUIOUS 0x80000000
#define _EM_AMBIGUOUS 0x80000000

#define _MCW_EM 0x0008001f
#define _EM_INEXACT 0x00000001
#define _EM_UNDERFLOW 0x00000002
#define _EM_OVERFLOW 0x00000004
#define _EM_ZERODIVIDE 0x00000008
#define _EM_INVALID 0x00000010
#define _EM_DENORMAL 0x00080000

#define _MCW_RC 0x00000300
#define _RC_NEAR 0x00000000
#define _RC_DOWN 0x00000100
#define _RC_UP 0x00000200
#define _RC_CHOP 0x00000300

#define _MCW_PC 0x00030000
#define _PC_64 0x00000000
#define _PC_53 0x00010000
#define _PC_24 0x00020000

#define _MCW_IC 0x00040000
#define _IC_AFFINE 0x00040000
#define _IC_PROJECTIVE 0x00000000

#define _MCW_DN 0x03000000
#define _DN_SAVE 0x00000000
#define _DN_FLUSH 0x01000000
#define _DN_FLUSH_OPERANDS_SAVE_RESULTS 0x02000000
#define _DN_SAVE_OPERANDS_FLUSH_RESULTS 0x03000000

#define _SW_UNEMULATED 0x0040
#define _SW_SQRTNEG 0x0080
#define _SW_STACKOVERFLOW 0x0200
#define _SW_STACKUNDERFLOW 0x0400

#define _FPE_INVALID 0x81
#define _FPE_DENORMAL 0x82
#define _FPE_ZERODIVIDE 0x83
#define _FPE_OVERFLOW 0x84
#define _FPE_UNDERFLOW 0x85
#define _FPE_INEXACT 0x86

#define _FPE_UNEMULATED 0x87
#define _FPE_SQRTNEG 0x88
#define _FPE_STACKOVERFLOW 0x8a
#define _FPE_STACKUNDERFLOW 0x8b

#define _FPE_EXPLICITGEN 0x8c

#define _FPE_MULTIPLE_TRAPS 0x8d
#define _FPE_MULTIPLE_FAULTS 0x8e

#define _FPCLASS_SNAN 0x0001
#define _FPCLASS_QNAN 0x0002
#define _FPCLASS_NINF 0x0004
#define _FPCLASS_NN 0x0008
#define _FPCLASS_ND 0x0010
#define _FPCLASS_NZ 0x0020
#define _FPCLASS_PZ 0x0040
#define _FPCLASS_PD 0x0080
#define _FPCLASS_PN 0x0100
#define _FPCLASS_PINF 0x0200

#if defined _M_IX86
#define _CW_DEFAULT                                                                                              \
  (_RC_NEAR + _PC_53 + _EM_INVALID + _EM_ZERODIVIDE + _EM_OVERFLOW + _EM_UNDERFLOW + _EM_INEXACT + _EM_DENORMAL)
#elif defined(_M_X64) || defined(_M_ARM) || defined(_M_ARM64)
#define _CW_DEFAULT                                                                                     \
  (_RC_NEAR + _EM_INVALID + _EM_ZERODIVIDE + _EM_OVERFLOW + _EM_UNDERFLOW + _EM_INEXACT + _EM_DENORMAL)
#endif

unsigned int __cdecl _clearfp();
unsigned int __cdecl _controlfp(unsigned, unsigned);
void __cdecl _set_controlfp(unsigned, unsigned);
errno_t __cdecl _controlfp_s(unsigned*, unsigned, unsigned);
unsigned int __cdecl _statusfp(void);
void __cdecl _fpreset(void);

#ifdef _M_IX86
void __cdecl _statusfp2(unsigned*, unsigned*);
#endif
#define _clear87 _clearfp
#define _status87 _statusfp
unsigned __cdecl _control87(unsigned, unsigned);
#ifdef _M_IX86
int __cdecl __control87_2(unsigned, unsigned, unsigned*, unsigned*);
#endif

int* __cdecl __fpecode(void);
#define _fpecode (*__fpecode())

int __cdecl __fpe_flt_rounds(void);
#define FLT_ROUNDS (__fpe_flt_rounds())
#define _DBL_ROUNDS FLT_ROUNDS
#define _LDBL_ROUNDS _DBL_ROUNDS

double __cdecl _copysign(double, double);
double __cdecl _chgsign(double);
double __cdecl _scalb(double, long);
double __cdecl _logb(double);
double __cdecl _nextafter(double, double);
int __cdecl _finite(double);
int __cdecl _isnan(double);
int __cdecl _fpclass(double);

#ifdef _M_X64
float __cdecl _scalbf(float, long);
#endif

#if defined(_CRT_INTERNAL_NONSTDC_NAMES) && _CRT_INTERNAL_NONSTDC_NAMES
#define clear87 _clear87
#define status87 _status87
#define control87 _control87
void __cdecl fpreset(void);
#define DBL_RADIX _DBL_RADIX
#define DBL_ROUNDS _DBL_ROUNDS
#define LDBL_RADIX _LDBL_RADIX
#define LDBL_ROUNDS _LDBL_ROUNDS
#define EM_AMBIGUIOUS _EM_AMBIGUOUS
#define EM_AMBIGUOUS _EM_AMBIGUOUS
#define MCW_EM _MCW_EM
#define EM_INVALID _EM_INVALID
#define EM_DENORMAL _EM_DENORMAL
#define EM_ZERODIVIDE _EM_ZERODIVIDE
#define EM_OVERFLOW _EM_OVERFLOW
#define EM_UNDERFLOW _EM_UNDERFLOW
#define EM_INEXACT _EM_INEXACT
#define MCW_IC _MCW_IC
#define IC_AFFINE _IC_AFFINE
#define IC_PROJECTIVE _IC_PROJECTIVE
#define MCW_RC _MCW_RC
#define RC_CHOP _RC_CHOP
#define RC_UP _RC_UP
#define RC_DOWN _RC_DOWN
#define RC_NEAR _RC_NEAR
#define MCW_PC _MCW_PC
#define PC_24 _PC_24
#define PC_53 _PC_53
#define PC_64 _PC_64
#define CW_DEFAULT _CW_DEFAULT
#define SW_INVALID _SW_INVALID
#define SW_DENORMAL _SW_DENORMAL
#define SW_ZERODIVIDE _SW_ZERODIVIDE
#define SW_OVERFLOW _SW_OVERFLOW
#define SW_UNDERFLOW _SW_UNDERFLOW
#define SW_INEXACT _SW_INEXACT
#define SW_UNEMULATED _SW_UNEMULATED
#define SW_SQRTNEG _SW_SQRTNEG
#define SW_STACKOVERFLOW _SW_STACKOVERFLOW
#define SW_STACKUNDERFLOW _SW_STACKUNDERFLOW
#define FPE_INVALID _FPE_INVALID
#define FPE_DENORMAL _FPE_DENORMAL
#define FPE_ZERODIVIDE _FPE_ZERODIVIDE
#define FPE_OVERFLOW _FPE_OVERFLOW
#define FPE_UNDERFLOW _FPE_UNDERFLOW
#define FPE_INEXACT _FPE_INEXACT
#define FPE_UNEMULATED _FPE_UNEMULATED
#define FPE_SQRTNEG _FPE_SQRTNEG
#define FPE_STACKOVERFLOW _FPE_STACKOVERFLOW
#define FPE_STACKUNDERFLOW _FPE_STACKUNDERFLOW
#define FPE_EXPLICITGEN _FPE_EXPLICITGEN
#endif
}
#endif
